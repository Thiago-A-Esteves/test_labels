name: Label issues
on:
  issues:
    types:
      - opened
jobs:
  label_issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Define Labels
        run: |
          ISSUE_NUMBER=${{ github.event.issue.number }}
          ISSUE_VIEW=$(gh issue view "$ISSUE_NUMBER" --json body,title -q '.body + " " + .title')
          if [ $? -ne 0 ]; then
            echo "Error: Failed to view issue $ISSUE_NUMBER"
            echo "$ISSUE_VIEW"
            exit 1
          fi
          ISSUE_DATA=$(echo "$ISSUE_VIEW" | tr '[:upper:]' '[:lower:]')
          LABELS=""
          LABEL_FOUND=false

          # Check for exact duplicate issues
          DUPLICATE_ISSUE=$(gh issue list --search '"$ISSUE_DATA"' --json number -q '.[].number' | grep -v "$ISSUE_NUMBER")

          if [[ -n "$DUPLICATE_ISSUE" ]]; then
            LABELS="duplicate"
            LABEL_FOUND=true
          else

            MAPPING=(
              "bug:bug"
              "feature:feature"
              "documentation:documentation"
              "performance:performance"
              "security:security"
              "optimization:optimization"
              "interface|ui|ux:ui/ux"
              "test:testing"
              "refactor:refactor"
              "dependency:dependency"
              "api:api"
              "database|db:database"
              "configuration|config:configuration"
              "accessibility|a11y:accessibility"
              "regression:regression"
              "enhancement:enhancement"
              "breaking change:breaking-change"
              "support:support"
              "question:question"
              "help:help"
              "urgent:urgent"
              "blocked:blocked"
              "wip:wip"
            )

            for MAP in "${MAPPING[@]}"; do
              KEYWORD=$(echo "$MAP" | cut -d':' -f1)
              LABEL=$(echo "$MAP" | cut -d':' -f2)
              if [[ "$ISSUE_DATA" =~ $KEYWORD ]]; then
                LABELS="$LABELS,$LABEL"
                LABEL_FOUND=true
              fi
            done

            LABELS=$(echo "$LABELS" | sed 's/^,//') # Remove leading comma
          fi

          if [[ "$LABEL_FOUND" == false ]]; then
            LABELS="triage"
          fi

          LABELS=$(echo "$LABELS" | tr ',' '\n' | sort -u | tr '\n' ',')
          LABELS=$(echo "$LABELS" | sed 's/,$//') # Remove trailing comma

          echo "LABELS=$LABELS" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
          NUMBER: ${{ github.event.issue.number }}

      - name: Add Labels to Issue
        run: gh issue edit "$NUMBER" --add-label "$LABELS"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_REPO: ${{ github.repository }}
